//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace PertentoBI.BusinessObjects.Database
{

    [Persistent(@"PBI_Dashboards")]
    public partial class Dashboards : XPLiteObject
    {
        int fDashboardID;
        [Key(true)]
        public int DashboardID
        {
            get { return fDashboardID; }
            set { SetPropertyValue<int>(nameof(DashboardID), ref fDashboardID, value); }
        }
        string fDashboardName;
        [Size(500)]
        public string DashboardName
        {
            get { return fDashboardName; }
            set { SetPropertyValue<string>(nameof(DashboardName), ref fDashboardName, value); }
        }
        string fGroupName;
        [Size(500)]
        public string GroupName
        {
            get { return fGroupName; }
            set { SetPropertyValue<string>(nameof(GroupName), ref fGroupName, value); }
        }
        string fDatasource;
        [Size(SizeAttribute.Unlimited)]
        public string Datasource
        {
            get { return fDatasource; }
            set { SetPropertyValue<string>(nameof(Datasource), ref fDatasource, value); }
        }
        byte[] fDashboardDefinition;
        [Size(SizeAttribute.Unlimited)]
        [MemberDesignTimeVisibility(true)]
        public byte[] DashboardDefinition
        {
            get { return fDashboardDefinition; }
            set { SetPropertyValue<byte[]>(nameof(DashboardDefinition), ref fDashboardDefinition, value); }
        }
        bool fIsCustomDashboard;
        public bool IsCustomDashboard
        {
            get { return fIsCustomDashboard; }
            set { SetPropertyValue<bool>(nameof(IsCustomDashboard), ref fIsCustomDashboard, value); }
        }
        string fDashboardDefinitionXML;
        [Size(SizeAttribute.Unlimited)]
        public string DashboardDefinitionXML
        {
            get { return fDashboardDefinitionXML; }
            set { SetPropertyValue<string>(nameof(DashboardDefinitionXML), ref fDashboardDefinitionXML, value); }
        }
        string fDefaultSource;
        [Size(50)]
        public string DefaultSource
        {
            get { return fDefaultSource; }
            set { SetPropertyValue<string>(nameof(DefaultSource), ref fDefaultSource, value); }
        }
        string fExtractSchedule;
        [Size(250)]
        public string ExtractSchedule
        {
            get { return fExtractSchedule; }
            set { SetPropertyValue<string>(nameof(ExtractSchedule), ref fExtractSchedule, value); }
        }
        DateTime fLastExtractDate;
        public DateTime LastExtractDate
        {
            get { return fLastExtractDate; }
            set { SetPropertyValue<DateTime>(nameof(LastExtractDate), ref fLastExtractDate, value); }
        }
        string fExtractStatus;
        [Size(50)]
        public string ExtractStatus
        {
            get { return fExtractStatus; }
            set { SetPropertyValue<string>(nameof(ExtractStatus), ref fExtractStatus, value); }
        }
        int fCreatedBy;
        public int CreatedBy
        {
            get { return fCreatedBy; }
            set { SetPropertyValue<int>(nameof(CreatedBy), ref fCreatedBy, value); }
        }
        DateTime fCreatedDate;
        [ColumnDbDefaultValue("(getdate())")]
        public DateTime CreatedDate
        {
            get { return fCreatedDate; }
            set { SetPropertyValue<DateTime>(nameof(CreatedDate), ref fCreatedDate, value); }
        }
        DateTime fUpdatedDate;
        public DateTime UpdatedDate
        {
            get { return fUpdatedDate; }
            set { SetPropertyValue<DateTime>(nameof(UpdatedDate), ref fUpdatedDate, value); }
        }
        int fUpdatedBy;
        public int UpdatedBy
        {
            get { return fUpdatedBy; }
            set { SetPropertyValue<int>(nameof(UpdatedBy), ref fUpdatedBy, value); }
        }
     }

}
